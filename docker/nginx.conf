user nginx;
worker_processes 1;
pid /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    client_body_timeout 20;
    send_timeout 2;
    types_hash_max_size 2048;
    server_tokens off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 254M;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    log_format upstream_status '$remote_addr - $remote_user [$time_local] '
    '"$http_host" "$request" "$server_name" "$request_uri"'
    'r - "$http_referer" "$http_user_agent" '
    '$upstream_addr[$upstream_cache_status][$upstream_status]';
    access_log /var/log/nginx/access.log upstream_status;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "msie6";

    fastcgi_buffers 16 256k;
    fastcgi_buffer_size 512k;

    proxy_buffers 16 256k;
    proxy_buffer_size 512k;
    uwsgi_buffers 16 254k;
    uwsgi_buffer_size 512k;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # CloudFlare
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 199.27.128.0/21;
    real_ip_header CF-Connecting-IP;

    upstream backend {
        server web:8000;
    }

    server {
        listen 80 default_server;
        server_name _;

        if ($http_x_forwarded_proto = "http") {
            return 301 https://$server_name$request_uri;
        }

        location /static {
            root /django_app/;
            try_files $uri =404;
        }

        location /media {
            root /django_app/;
            try_files $uri =404;
        }

        location / {
            proxy_pass http://backend;
            proxy_set_header    X-Real-IP            $remote_addr;
            proxy_set_header    X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host     "";
            proxy_set_header    Host                 $http_host;
            proxy_set_header    X-Forwarded-Protocol $scheme;

        }
    }

}
